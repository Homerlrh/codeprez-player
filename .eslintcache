[{"/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/index.js":"1","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/App.js":"2","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/comps/Player.js":"3","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/comps/TextEditor.js":"4","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/comps/Mp3Player.js":"5","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/context/Provider.js":"6","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/helper/sessionStorageParser.js":"7"},{"size":499,"mtime":1610834092484,"results":"8","hashOfConfig":"9"},{"size":304,"mtime":1610851115621,"results":"10","hashOfConfig":"9"},{"size":1759,"mtime":1610854292666,"results":"11","hashOfConfig":"9"},{"size":2374,"mtime":1610852633778,"results":"12","hashOfConfig":"9"},{"size":1088,"mtime":1610853135022,"results":"13","hashOfConfig":"9"},{"size":1017,"mtime":1610853334985,"results":"14","hashOfConfig":"9"},{"size":493,"mtime":1610804141589,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"q3hauo",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"18"},"/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/index.js",[],["34","35"],"/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/App.js",[],"/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/comps/Player.js",[],"/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/comps/TextEditor.js",["36","37"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {ControlledEditor as MonacoEditor} from \"@monaco-editor/react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faSun, faSave } from \"@fortawesome/fontawesome-free-solid\";\n\nimport styled from \"styled-components\";\n\nexport default function TextEditor({ currentText, lang, onPlay }) {\n\n  const [theme, setTheme] = useState(\"vs-dark\");\n  const [text, setText] = useState(currentText);\n  const [customizedText, setCustomizedText] = useState(text);\n\t\n  const handleEditorDidMount = (editor, monaco) => {\n    console.log(\"editorDidMount\", editor);\n  };\n\n\tuseEffect(() => {\n\t\t//if (onPlay) { \n      setText(currentText);\n      setCustomizedText(currentText);\n    //}\n  }, [currentText]);\n\n  \n  //set onPlay to true will erase user changes\n  useEffect(() => {\n\t\tif (onPlay) { \n      setCustomizedText(text);\n    }\n\t}, [onPlay]);\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"vs-dark\" : \"light\");\n  }\n\n  const handleOnChange = (evt, newValue) => {\n    debugger  \n    setCustomizedText(newValue);\n  }\n\n\tconst handleSaveChange = () => {\n    const type = {type:`text/${lang}`||\"text/javascript\"};\n    const blob = new Blob([customizedText], type);\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.download = \"example.js\";\n    link.href = url;\n    link.click();\n  }\n\n\treturn (\n\t\t<>\n      <Menu >\n        <Button onClick={toggleTheme}>\n          <FontAwesomeIcon icon={theme===\"vs-dark\"? faMoon:faSun} size=\"2x\" />\n        </Button>\n        <Button onClick={handleSaveChange}> \n           <FontAwesomeIcon icon={faSave} size=\"2x\" />\n        </Button>\n      </Menu>\n\t\t\t<MonacoEditor\n\t\t\t\theight=\"90vh\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\tlanguage={lang}\n\t\t\t\tvalue={customizedText}\n        onChange={handleOnChange}\n\t\t\t\teditorDidMount={handleEditorDidMount}\n        theme={theme}\n        //options={ {selectOnLineNumbers: true , minimap: { enable: false} }}\n\t\t\t/>\n\t\t</>\n\t);\n}\nconst Menu = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  margin-bottom: 10px;\n`;\n\nconst Button = styled.button`\n  background-color: #fff;\n  width: 40px;\n  height: 30px;\n  border: none;\n  border-radius: 3px;\n  margin:5px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/comps/Mp3Player.js",[],"/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/context/Provider.js",["38","39","40"],"import React, {createContext, useReducer} from \"react\";\nimport { sessionStorageParser } from \"../helper/sessionStorageParser\";\nconst data = require(\"../db/example.json\");\n\nconst defaultContent = \n   {\n    snapshots: data.snapshots,\n    text:\"\",\n    lang: data.extension.substr(data.extension.match(\"/\")+1),\n    currentTimestamp: 0,\n    onPlay: false\n  };\n\nexport const ContentContext = createContext(defaultContent);\nexport const DispatchContentContext = createContext(undefined);\n\n// export const ContentProvider = ({children}) => {\n//    const [content, dispatchContent] = useReducer(\n//      (content, changes) => {\n//        sessionStorageParser(changes);\n//        return {...content, ...changes}\n//      },\n//      defaultContent\n//    );\n\n  //   return(\n  //    <ContentContext.provider value={content}>\n  //      <DispatchContent.provider value={dispatchContent}>\n  //        {children}\n  //      </DispatchContent.provider>\n  //    </ContentContext.provider>\n  //  )\n//  } \n\n//export default ContentProvider;","/Users/shaojuanzhang/Study/SelfLearning/North/codeprez/src/helper/sessionStorageParser.js",["41"],"export const sessionStorageParser = (value) => {\n  if(!value) {\n    //writing data to sessionstorage\n    const storage = { ... sessionStorage};\n    for(const key of Object.keys(storage)) {\n      storage[key] = JSON.parse(storage[key]);\n    }\n    return storage;\n  } else {\n    for(const key of Object.keys(value)) {\n      if(typeof value[key] === 'object') \n        sessionStorage.setItem(key, JSON.stringify(value[key]));\n      else\n        sessionStorage.setItem(key.value[key]);\n    }\n  }\n}",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":38,"nodeType":"48","messageId":"49","endLine":1,"endColumn":48},{"ruleId":"50","severity":1,"message":"51","line":31,"column":5,"nodeType":"52","endLine":31,"endColumn":13,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"54","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":13},{"ruleId":"46","severity":1,"message":"55","line":1,"column":31,"nodeType":"48","messageId":"49","endLine":1,"endColumn":41},{"ruleId":"46","severity":1,"message":"56","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":4,"column":26,"nodeType":"59","messageId":"60","endLine":4,"endColumn":27,"fix":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'text'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCustomizedText' needs the current value of 'text'.","ArrayExpression",["64"],"'React' is defined but never used.","'useReducer' is defined but never used.","'sessionStorageParser' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"65","text":"66"},"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},[126,127],"","Update the dependencies array to be: [onPlay, text]",{"range":"69","text":"70"},[914,922],"[onPlay, text]"]